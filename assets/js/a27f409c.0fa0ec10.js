"use strict";(self.webpackChunkhades_2_mod_wiki=self.webpackChunkhades_2_mod_wiki||[]).push([[80553],{68482:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>u,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"h2m-docs/tables/definitions/rom.gui","title":"rom.gui.lua","description":"","source":"@site/docs/h2m-docs/tables/definitions/rom.gui.md","sourceDirName":"h2m-docs/tables/definitions","slug":"/h2m-docs/tables/definitions/rom.gui","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.gui","draft":false,"unlisted":false,"editUrl":"https://github.com/sgg-modding/hades2modwiki/tree/main/docs/h2m-docs/tables/definitions/rom.gui.md","tags":[],"version":"current","frontMatter":{"title":"rom.gui.lua"},"sidebar":"tutorialSidebar","previous":{"title":"rom.gpk.lua","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.gpk"},"next":{"title":"rom.inputs.lua","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.inputs"}}');var r=i(74848),o=i(28453);const a={title:"rom.gui.lua"},u=void 0,s={},d=[];function c(n){const e={code:"code",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-lua",children:'---@meta gui\r\n\r\n---@class (exact) rom.gui\r\n\r\n-- Registers a function that will be called under your dedicated space in the imgui main menu bar.\r\n--**Example Usage:**\r\n--```lua\r\n--rom.gui.add_to_menu_bar(function()\r\n--   if ImGui.BeginMenu("Ayo") then\r\n--       if ImGui.Button("Label") then\r\n--         log.info("hi")\r\n--       end\r\n--       ImGui.EndMenu()\r\n--   end\r\n--end)\r\n--```\r\n---@param imgui_rendering function Function that will be called under your dedicated space in the imgui main menu bar.\r\nfunction gui.add_to_menu_bar(imgui_rendering) end\r\n\r\n-- Registers a function that will be called every rendering frame, regardless of the gui is in its open state. You can call ImGui functions in it, please check the ImGui.md documentation file for more info.\r\n--**Example Usage:**\r\n--```lua\r\n--rom.gui.add_always_draw_imgui(function()\r\n--   if ImGui.Begin("My Custom Window") then\r\n--       if ImGui.Button("Label") then\r\n--         log.info("hi")\r\n--       end\r\n--\r\n--   end\r\n--   ImGui.End()\r\n--end)\r\n--```\r\n---@param imgui_rendering function Function that will be called every rendering frame, regardless of the gui is in its open state. You can call ImGui functions in it, please check the ImGui.md documentation file for more info.\r\nfunction gui.add_always_draw_imgui(imgui_rendering) end\r\n\r\n-- Registers a function that will be called every rendering frame, only if the gui is in its open state. You can call ImGui functions in it, please check the ImGui.md documentation file for more info.\r\n--**Example Usage:**\r\n--```lua\r\n--rom.gui.add_imgui(function()\r\n--   if ImGui.Begin("My Custom Window") then\r\n--       if ImGui.Button("Label") then\r\n--         log.info("hi")\r\n--       end\r\n--\r\n--   end\r\n--   ImGui.End()\r\n--end)\r\n--```\r\n---@param imgui_rendering function Function that will be called every rendering frame, only if the gui is in its open state. You can call ImGui functions in it, please check the ImGui.md documentation file for more info.\r\nfunction gui.add_imgui(imgui_rendering) end\r\n\r\n---@return boolean # Returns true if the GUI is open.\r\nfunction gui.is_open() end\r\n\r\n-- Opens or closes the GUI.\r\nfunction gui.toggle() end\r\n\n'})})}function m(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>u});var t=i(96540);const r={},o=t.createContext(r);function a(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function u(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);