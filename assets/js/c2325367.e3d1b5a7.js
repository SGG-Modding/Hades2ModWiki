"use strict";(self.webpackChunkhades_2_mod_wiki=self.webpackChunkhades_2_mod_wiki||[]).push([[82182],{14149:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var n=s(74848),o=s(28453);const t={},r="Table: rom.game",d={id:"h2m-docs/tables/rom.game",title:"Table: rom.game",description:"Functions (1)",source:"@site/docs/h2m-docs/tables/rom.game.md",sourceDirName:"h2m-docs/tables",slug:"/h2m-docs/tables/rom.game",permalink:"/Hades2ModWiki/docs/h2m-docs/tables/rom.game",draft:!1,unlisted:!1,editUrl:"https://github.com/sgg-modding/hades2modwiki/tree/main/docs/h2m-docs/tables/rom.game.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Table: rom.data",permalink:"/Hades2ModWiki/docs/h2m-docs/tables/rom.data"},next:{title:"Table: rom.gui",permalink:"/Hades2ModWiki/docs/h2m-docs/tables/rom.gui"}},i={},c=[{value:"Functions (1)",id:"functions-1",level:2},{value:"<code>LoadPackages(args)</code>",id:"loadpackagesargs",level:3}];function l(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"table-romgame",children:"Table: rom.game"}),"\n",(0,n.jsx)(a.h2,{id:"functions-1",children:"Functions (1)"}),"\n",(0,n.jsx)(a.h3,{id:"loadpackagesargs",children:(0,n.jsx)(a.code,{children:"LoadPackages(args)"})}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Example Usage:"})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-lua",children:'local package_path = rom.path.combine(_PLUGIN.plugins_data_mod_folder_path, _PLUGIN.guid)\n-- Example package_path: "C:/Program Files (x86)/Steam/steamapps/common/Hades II/Ship/ReturnOfModding/plugins_data/AuthorName-ModName/AuthorName-ModName"\nrom.game.LoadPackages{Name = package_path}\n'})}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Parameters:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"args"})," (table","<","string, string",">","): Table contains string key ",(0,n.jsx)(a.code,{children:"Name"})," and its associated ",(0,n.jsx)(a.code,{children:"string"})," value. Associated value should be a full path to the package to load, without the extension. The filename of the .pkg and the .pkg_manifest files should contains the guid of the owning mod. Example ",(0,n.jsx)(a.code,{children:"AuthorName-ModName-MyMainPackage"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Example Usage:"})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-lua",children:"rom.game.LoadPackages(args)\n"})})]})}function m(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>d});var n=s(96540);const o={},t=n.createContext(o);function r(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);