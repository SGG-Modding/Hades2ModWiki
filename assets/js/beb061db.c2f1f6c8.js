"use strict";(self.webpackChunkhades_2_mod_wiki=self.webpackChunkhades_2_mod_wiki||[]).push([[1811],{78658:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"h2m-docs/classes/rom.pointer","title":"Class: rom.pointer","description":"Class representing a 64-bit memory address.","source":"@site/docs/h2m-docs/classes/rom.pointer.md","sourceDirName":"h2m-docs/classes","slug":"/h2m-docs/classes/rom.pointer","permalink":"/Hades2ModWiki/docs/h2m-docs/classes/rom.pointer","draft":false,"unlisted":false,"editUrl":"https://github.com/sgg-modding/hades2modwiki/tree/main/docs/h2m-docs/classes/rom.pointer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Class: rom.lua_patch","permalink":"/Hades2ModWiki/docs/h2m-docs/classes/rom.lua_patch"},"next":{"title":"Class: rom.value_wrapper","permalink":"/Hades2ModWiki/docs/h2m-docs/classes/rom.value_wrapper"}}');var r=s(74848),d=s(28453);const i={},c="Class: rom.pointer",t={},a=[{value:"Constructors (1)",id:"constructors-1",level:2},{value:"<code>new(address)</code>",id:"newaddress",level:3},{value:"Functions (28)",id:"functions-28",level:2},{value:"<code>add(offset)</code>",id:"addoffset",level:3},{value:"<code>sub(offset)</code>",id:"suboffset",level:3},{value:"<code>rip(offset)</code>",id:"ripoffset",level:3},{value:"<code>rip_cmp(offset)</code>",id:"rip_cmpoffset",level:3},{value:"<code>get_byte()</code>",id:"get_byte",level:3},{value:"<code>get_word()</code>",id:"get_word",level:3},{value:"<code>get_dword()</code>",id:"get_dword",level:3},{value:"<code>get_float()</code>",id:"get_float",level:3},{value:"<code>get_double()</code>",id:"get_double",level:3},{value:"<code>get_qword()</code>",id:"get_qword",level:3},{value:"<code>set_byte(value)</code>",id:"set_bytevalue",level:3},{value:"<code>set_word(value)</code>",id:"set_wordvalue",level:3},{value:"<code>set_dword(value)</code>",id:"set_dwordvalue",level:3},{value:"<code>set_float(value)</code>",id:"set_floatvalue",level:3},{value:"<code>set_double(value)</code>",id:"set_doublevalue",level:3},{value:"<code>set_qword(value)</code>",id:"set_qwordvalue",level:3},{value:"<code>get_string()</code>",id:"get_string",level:3},{value:"<code>set_string(value)</code>",id:"set_stringvalue",level:3},{value:"<code>patch_byte(value)</code>",id:"patch_bytevalue",level:3},{value:"<code>patch_word(value)</code>",id:"patch_wordvalue",level:3},{value:"<code>patch_dword(value)</code>",id:"patch_dwordvalue",level:3},{value:"<code>patch_qword(value)</code>",id:"patch_qwordvalue",level:3},{value:"<code>patch_float(value)</code>",id:"patch_floatvalue",level:3},{value:"<code>patch_double(value)</code>",id:"patch_doublevalue",level:3},{value:"<code>is_null()</code>",id:"is_null",level:3},{value:"<code>is_valid()</code>",id:"is_valid",level:3},{value:"<code>deref()</code>",id:"deref",level:3},{value:"<code>get_address()</code>",id:"get_address",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"class-rompointer",children:"Class: rom.pointer"})}),"\n",(0,r.jsx)(n.p,{children:"Class representing a 64-bit memory address."}),"\n",(0,r.jsx)(n.h2,{id:"constructors-1",children:"Constructors (1)"}),"\n",(0,r.jsx)(n.h3,{id:"newaddress",children:(0,r.jsx)(n.code,{children:"new(address)"})}),"\n",(0,r.jsx)(n.p,{children:"Returns a memory instance, with the given address."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"address"})," (integer): Address"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"myInstance = pointer:new(address)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"functions-28",children:"Functions (28)"}),"\n",(0,r.jsx)(n.h3,{id:"addoffset",children:(0,r.jsx)(n.code,{children:"add(offset)"})}),"\n",(0,r.jsx)(n.p,{children:"Adds an offset to the current memory address and returns a new pointer object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offset"})," (integer): offset"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pointer"}),": new pointer object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"pointer = rom.pointer:add(offset)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"suboffset",children:(0,r.jsx)(n.code,{children:"sub(offset)"})}),"\n",(0,r.jsx)(n.p,{children:"Subs an offset to the current memory address and returns a new pointer object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offset"})," (integer): offset"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pointer"}),": new pointer object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"pointer = rom.pointer:sub(offset)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ripoffset",children:(0,r.jsx)(n.code,{children:"rip(offset)"})}),"\n",(0,r.jsx)(n.p,{children:"Rips the current memory address and returns a new pointer object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offset"})," (integer): offset"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pointer"}),": new pointer object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"pointer = rom.pointer:rip(offset)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rip_cmpoffset",children:(0,r.jsx)(n.code,{children:"rip_cmp(offset)"})}),"\n",(0,r.jsx)(n.p,{children:"Rips (cmp instruction) the current memory address and returns a new pointer object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offset"})," (integer): offset"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pointer"}),": new pointer object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"pointer = rom.pointer:rip_cmp(offset)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_byte",children:(0,r.jsx)(n.code,{children:"get_byte()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_byte()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_word",children:(0,r.jsx)(n.code,{children:"get_word()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_word()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_dword",children:(0,r.jsx)(n.code,{children:"get_dword()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_dword()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_float",children:(0,r.jsx)(n.code,{children:"get_float()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_float()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_double",children:(0,r.jsx)(n.code,{children:"get_double()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_double()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_qword",children:(0,r.jsx)(n.code,{children:"get_qword()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_qword()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_bytevalue",children:(0,r.jsx)(n.code,{children:"set_byte(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_byte(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_wordvalue",children:(0,r.jsx)(n.code,{children:"set_word(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_word(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_dwordvalue",children:(0,r.jsx)(n.code,{children:"set_dword(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_dword(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_floatvalue",children:(0,r.jsx)(n.code,{children:"set_float(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_float(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_doublevalue",children:(0,r.jsx)(n.code,{children:"set_double(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_double(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_qwordvalue",children:(0,r.jsx)(n.code,{children:"set_qword(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_qword(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_string",children:(0,r.jsx)(n.code,{children:"get_string()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the value stored at the memory address as the specified type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"string"}),": the value stored at the memory address as the specified type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"string = rom.pointer:get_string()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set_stringvalue",children:(0,r.jsx)(n.code,{children:"set_string(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the value at the memory address to the specified value of the given type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (string): new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rom.pointer:set_string(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_bytevalue",children:(0,r.jsx)(n.code,{children:"patch_byte(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_byte(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_wordvalue",children:(0,r.jsx)(n.code,{children:"patch_word(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_word(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_dwordvalue",children:(0,r.jsx)(n.code,{children:"patch_dword(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_dword(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_qwordvalue",children:(0,r.jsx)(n.code,{children:"patch_qword(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_qword(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_floatvalue",children:(0,r.jsx)(n.code,{children:"patch_float(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_float(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"patch_doublevalue",children:(0,r.jsx)(n.code,{children:"patch_double(value)"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a memory patch for modifying the value at the memory address with the specified value.\r\nThe modified value is applied when you call the apply function on the lua_patch object.\r\nThe original value is restored when you call the restore function on the lua_patch object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (number): new value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lua_patch"}),": memory patch instance for modifying the value at the memory address with the specified value. Can call apply / restore on the object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"lua_patch = rom.pointer:patch_double(value)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is_null",children:(0,r.jsx)(n.code,{children:"is_null()"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"boolean"}),": Returns true if the address is null."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"boolean = rom.pointer:is_null()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is_valid",children:(0,r.jsx)(n.code,{children:"is_valid()"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"boolean"}),": Returns true if the address is not null."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"boolean = rom.pointer:is_valid()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"deref",children:(0,r.jsx)(n.code,{children:"deref()"})}),"\n",(0,r.jsx)(n.p,{children:"Dereferences the memory address and returns a new pointer object pointing to the value at that address."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pointer"}),": A new pointer object pointing to the value at that address."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"pointer = rom.pointer:deref()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get_address",children:(0,r.jsx)(n.code,{children:"get_address()"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the memory address stored in the pointer object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),": The memory address stored in the pointer object as a number."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"number = rom.pointer:get_address()\n"})})]})}function o(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var l=s(96540);const r={},d=l.createContext(r);function i(e){const n=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);