"use strict";(self.webpackChunkhades_2_mod_wiki=self.webpackChunkhades_2_mod_wiki||[]).push([[83921],{99029:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"h2m-docs/tables/definitions/rom.path","title":"rom.path.lua","description":"","source":"@site/docs/h2m-docs/tables/definitions/rom.path.md","sourceDirName":"h2m-docs/tables/definitions","slug":"/h2m-docs/tables/definitions/rom.path","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.path","draft":false,"unlisted":false,"editUrl":"https://github.com/sgg-modding/hades2modwiki/tree/main/docs/h2m-docs/tables/definitions/rom.path.md","tags":[],"version":"current","frontMatter":{"title":"rom.path.lua"},"sidebar":"tutorialSidebar","previous":{"title":"rom.on_import.lua","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.on_import"},"next":{"title":"rom.paths.lua","permalink":"/Hades2ModWiki/docs/h2m-docs/tables/definitions/rom.paths"}}');var i=n(74848),r=n(28453);const o={title:"rom.path.lua"},s=void 0,h={},c=[];function p(t){const e={code:"code",pre:"pre",...(0,r.R)(),...t.components};return(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'---@meta path\n\n-- Table containing helpers for manipulating file or directory paths\n---@class (exact) rom.path\n\n-- Combines strings into a path.\n---@param path string Any amount of string is accepted.\n---@return string # Returns the combined path\nfunction path.combine(path) end\n\n-- Retrieves the parent directory of the specified path, including both absolute and relative paths.\n---@param path string The path for which to retrieve the parent directory.\n---@return string # Returns the parent path\nfunction path.get_parent(path) end\n\n---@param root_path string The path to the directory to search.\n---@return string table # Returns the names of subdirectories under the given root_path\nfunction path.get_directories(root_path) end\n\n---@param root_path string The path to the directory to search.\n---@return string table # Returns the names of all the files under the given root_path\nfunction path.get_files(root_path) end\n\n---@param path string The path for which to retrieve the filename.\n---@return string # Returns the filename identified by the path.\nfunction path.filename(path) end\n\n---@param path string The path for which to retrieve the stem.\n---@return string # Returns the stem of the filename identified by the path (i.e. the filename without the final extension).\nfunction path.stem(path) end\n\n---@param path string The path to the new directory to create.\n---@return boolean # true if a directory was newly created for the directory p resolves to, false otherwise.\nfunction path.create_directory(path) end\n\n---@param path string The path to check.\n---@return boolean # true if the path exists, false otherwise.\nfunction path.exists(path) end\n\n-- Registers a callback that will be called when a file changes.\n--**Example Usage:**\n--```lua\n--rom.path.add_file_watcher(_ENV["!config_mod_folder_path"], function (file_name, timestamp)\n--\t\tlog.info(file_name, timestamp)\n--end)\n--```\n---@param path string The path to add file watcher.\n---@param callback function callback that match signature function ( file_name, timestamp ).\nfunction path.add_file_watcher(path, callback) end\n\n'})})}function d(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(p,{...t})}):p(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>s});var a=n(96540);const i={},r=a.createContext(i);function o(t){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),a.createElement(r.Provider,{value:e},t.children)}}}]);